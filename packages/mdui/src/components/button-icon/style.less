@import url("~@mdui/shared/mixin.less");

:host {
  --shape-corner: var(--mdui-shape-corner-full);

  position: relative;
  display: inline-block;
  overflow: hidden;
  text-align: center;
  border-radius: var(--shape-corner);
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  .fontSize(24);
  .width(40);
  .minWidth(40);
  .height(40);
}

:host([variant="standard"]) {
  .color(on-surface-variant);
  .stateLayerColor(on-surface-variant);
}

:host([variant="filled"]) {
  .color(primary);
  .backgroundColor(surface-container-highest);
  .stateLayerColor(primary);
}

:host([variant="tonal"]) {
  .color(on-surface-variant);
  .backgroundColor(surface-container-highest);
  .stateLayerColor(on-surface-variant);
}

:host([variant="outlined"]) {
  .border(1, solid, outline);
  .color(on-surface-variant);
  .stateLayerColor(on-surface-variant);
}

:host([variant="outlined"][pressed]) {
  .color(on-surface);
  .stateLayerColor(on-surface);
}

:host([variant="standard"][selected]) {
  .color(primary);
  .stateLayerColor(primary);
}

:host([variant="filled"][selected]),
:host([variant="filled"]:not([selectable])) {
  .color(on-primary);
  .backgroundColor(primary);
  .stateLayerColor(on-primary);
}

:host([variant="tonal"][selected]),
:host([variant="tonal"]:not([selectable])) {
  .color(on-secondary-container);
  .backgroundColor(secondary-container);
  .stateLayerColor(on-secondary-container);
}

:host([variant="outlined"][selected]) {
  border: none;
  .color(inverse-on-surface);
  .backgroundColor(inverse-surface);
  .stateLayerColor(inverse-on-surface);
}

:host([variant="filled"][disabled]),
:host([variant="tonal"][disabled]),
:host([variant="outlined"][disabled]) {
  .backgroundColor(on-surface, 0.12);
  .borderColor(on-surface, 0.12);
}

:host([disabled]),
:host([loading]) {
  cursor: default;
  pointer-events: none;
}

:host([disabled]) {
  .color(on-surface, 0.38) !important;
}

:host([loading]) {
  mdui-ripple,
  .button {
    opacity: 0;
  }
}

.button {
  float: left;
  width: 100%;
}

.icon,
::slotted(*) {
  font-size: inherit;
}

mdui-circular-progress {
  display: flex;
  position: absolute;
  top: calc(50% - unit((24 / @root-font-size), rem) / 2);
  left: calc(50% - unit((24 / @root-font-size), rem) / 2);
  .width(24);
  .height(24);

  // filled 背景色和 loading 颜色冲突，需要特殊处理
  :host([variant="filled"]:not([disabled])) & {
    .stroke(on-primary);
  }

  :host([disabled]) & {
    .stroke(on-surface, 38%)
  }
}
