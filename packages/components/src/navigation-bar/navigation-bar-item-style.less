@import "~@mdui/shared/mixin.less";

:host {
  --shape-corner-indicator: var(--mdui-shape-corner-full);

  position: relative;
  z-index: 0;
  flex: 1;
  overflow: hidden;
  .minWidth(48);
  .stateLayerColor(on-surface-variant);
}

.item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  .transition(padding, short4, standard);
  .paddingTop(12);
  .paddingBottom(12);
}

mdui-ripple {
  z-index: 1;
  left: 50%;
  transform: translateX(-50%);
  .transition(margin-top, short4, standard);
  .width(64);
  .height(32);
  .marginTop(12);
  .shapeCorner(full);
}

.indicator {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  border-radius: var(--shape-corner-indicator);
  .height(32);
  .width(32);
}

.indicator,
:host([active]) .indicator {
  transition: background-color var(--mdui-motion-duration-short1) var(--mdui-motion-easing-standard), width var(--mdui-motion-duration-short4) var(--mdui-motion-easing-standard);
}

::slotted([slot="badge"]) {
  position: absolute;
  transform: translate(50%, -50%); // 距离图标左侧和底部 12dp
}

::slotted([slot="badge"][variant="small"]) {
  .translate(9, -9); // 位于图标右上角
}

.icon,
.active-icon,
::slotted([slot="icon"]),
::slotted([slot="active-icon"]) {
  .color(on-surface-variant);
  .fontSize(24);
}

.active-icon,
::slotted([slot="active-icon"]) {
  display: none;
}

.label {
  display: flex;
  align-items: center;
  .transition(opacity, short4, linear);
  .height(16);
  .color(on-surface-variant);
  .marginTop(4);
  .marginBottom(4);
  .typescale(label-medium);
}

:host([label-visibility="unlabeled"]),
:host([label-visibility="selected"]:not([active])) {
  mdui-ripple {
    .marginTop(24);
  }

  .item {
    .paddingTop(24);
    .paddingBottom(0);
  }

  .label {
    opacity: 0;
  }
}

:host([active]) {
  .stateLayerColor(on-surface);

  .indicator {
    .width(64);
    .backgroundColor(secondary-container);
  }

  .icon,
  .active-icon,
  ::slotted([slot="icon"]),
  ::slotted([slot="active-icon"]) {
    .color(on-secondary-container);
  }

  .has-active-icon {
    .active-icon,
    ::slotted([slot="active-icon"]) {
      display: inline-block;
    }

    .icon,
    ::slotted([slot="icon"]) {
      display: none;
    }
  }

  .label {
    .color(on-surface);
  }
}
