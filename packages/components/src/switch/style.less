@import "~@mdui/shared/mixin.less";

:host {
  --shape-corner: var(--mdui-shape-corner-full);
  --shape-corner-thumb: var(--mdui-shape-corner-full);

  position: relative;
  display: inline-block;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  .height(40);
}

:host([disabled]) {
  cursor: default;
}

label {
  display: inline-flex;
  align-items: center;
  width: 100%;
  height: 100%;
  white-space: nowrap;
  cursor: inherit;
  user-select: none;
  touch-action: manipulation;
  zoom: 1;
  -webkit-user-drag: none;
}

/* 轨道 */
.track {
  position: relative;
  display: flex;
  align-items: center;
  border-radius: var(--shape-corner);
  transition: background-color 100ms var(--mdui-motion-easing-standard), border-width 100ms var(--mdui-motion-easing-standard);
  .height(32);
  .width(52);
  .border(2, solid, outline);
  .backgroundColor(surface-variant);

  :host([checked]) & {
    .backgroundColor(primary);
    .borderWidth(0);
  }

  :host([disabled]) & {
    .backgroundColor(surface-variant, 0.12);
    .borderColor(on-surface, 0.12);
  }

  :host([disabled][checked]) & {
    .backgroundColor(on-surface, 0.12);
  }
}

/* 隐藏系统 input 标签，用自定义的图标代替 */
input {
  position: absolute;
  padding: 0;
  opacity: 0;
  pointer-events: none;
  .width(20);
  .height(20);
  .margin(0, 0, 0, 10);
}

mdui-ripple {
  border-radius: 50%;
  transition: left 100ms var(--mdui-motion-easing-standard), top 100ms var(--mdui-motion-easing-standard);
  .width(40);
  .height(40);
}

.thumb {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--shape-corner-thumb);
  transition: width 100ms var(--mdui-motion-easing-standard), height 100ms var(--mdui-motion-easing-standard), left 100ms var(--mdui-motion-easing-standard), background-color 100ms var(--mdui-motion-easing-standard);
  .height(16);
  .width(16);
  .left(6);
  .backgroundColor(outline);
  .stateLayerColor(on-surface);

  mdui-ripple {
    .left(-12);
    .top(-12);
  }

  &.has-icon {
    .height(24);
    .width(24);
    .left(2);

    mdui-ripple {
      .left(-8);
      .top(-8);
    }
  }

  :host([hover]) &,
  :host([focused]) &,
  :host([pressed]) & {
    .backgroundColor(on-surface-variant);
  }

  :host([checked]) & {
    .height(24);
    .width(24);
    .left(24);
    .backgroundColor(on-primary);
    .stateLayerColor(primary);

    mdui-ripple {
      .left(-8);
      .top(-8);
    }
  }

  :host([hover][checked]) &,
  :host([focused][checked]) &,
  :host([pressed][checked]) & {
    .backgroundColor(primary-container);
  }

  :host([pressed]) & {
    .height(28);
    .width(28);
    .left(0);

    mdui-ripple {
      .left(-6);
      .top(-6);
    }
  }

  :host([disabled]) & {
    .backgroundColor(on-surface, 0.38);
  }

  :host([disabled][checked]) & {
    .backgroundColor(surface);
  }
}

.icon,
.checked-icon,
::slotted([slot="icon"]),
::slotted([slot="checked-icon"]) {
  position: absolute;
  .fontSize(16);
}

.icon,
::slotted([slot="icon"]) {
  .color(surface-variant);

  :host([disabled]) & {
    .color(surface-variant, 0.38);
  }
}

.checked-icon,
::slotted([slot="checked-icon"]) {
  .color(on-primary-container);

  :host([disabled]) & {
    .color(on-surface, 0.38);
  }
}

input.invalid {
  & + .track {
    .borderColor(error);
    .backgroundColor(error-container);

    .thumb {
      .backgroundColor(error);
      .stateLayerColor(error);
    }
  }
}
