@import "~@mdui/shared/mixin.less";

:host {
  --shape-corner: var(--mdui-shape-corner-none);
  --shape-corner-rounded: var(--mdui-shape-corner-full);

  position: relative;
  display: block;
  overflow: hidden;
  border-radius: var(--shape-corner);
  .stateLayerColor(on-surface);
}

:host([rounded]) {
  border-radius: var(--shape-corner-rounded);
}

:host([active]) {
  .backgroundColor(surface-variant);
}

:host([disabled]) {
  pointer-events: none;
}

.item {
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;

  :host([disabled]) & {
    cursor: default;
    opacity: 0.38;
  }

  :host([nonclickable]:not([href])) & {
    cursor: auto;
    user-select: auto;
  }
}

.preset {
  display: flex;
  align-items: center;
  text-decoration: none;
  .padding(8, 16);
  .minHeight(48);
}

.body {
  display: flex;
  flex: 1 1 100%;
  flex-direction: column;
  justify-content: center;
  min-width: 0;
}

.primary {
  display: block;
  .color(on-surface);
  .typescale(body-large);
}

.secondary {
  display: none;
  .color(on-surface-variant);
  .paddingTop(4);
  .typescale(body-medium);
}

.has-secondary {
  display: block;
}

:host([primary-line="1"]) .primary,
:host([secondary-line="1"]) .secondary {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

:host([primary-line="2"]) .primary,
:host([secondary-line="2"]) .secondary,
:host([primary-line="3"]) .primary,
:host([secondary-line="3"]) .secondary {
  // stylelint-disable-next-line
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
}

:host([primary-line="2"]) .primary,
:host([secondary-line="2"]) .secondary {
  -webkit-line-clamp: 2;
}

:host([primary-line="3"]) .primary,
:host([secondary-line="3"]) .secondary {
  -webkit-line-clamp: 3;
}

.start,
.end {
  display: none;
  flex: 0 0 auto;
  .color(on-surface-variant, 70%);
  .typescale(body-small);
}

.has-start,
.has-end {
  display: flex;

  ::slotted(mdui-icon) {
    .fontSize(24);
  }
}

.has-start {
  .marginRight(16);
}

.has-end {
  .marginLeft(16);

  ::slotted([slot="end"]) {
    text-align: right;
  }
}
